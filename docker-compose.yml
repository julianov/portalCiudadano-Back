version: '3.8'

services:
    webserver:
        image: nginx:latest
        container_name: webserver
        restart: unless-stopped
        depends_on:
            - backend
        ports:
            - "8001:80"
        volumes:
            - ./:/var/www
            - ./Dockerfiles/nginx:/etc/nginx/conf.d
        networks:
            app-network:

    backend:
        build:
            context: Dockerfiles/php
            dockerfile: Dockerfile
        container_name: backend
        volumes:
            - ./:/var/www
            - ./Dockerfiles/php/php.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            app-network:
#   database:
#       build:
#           context: Dockerfiles/oracle
#           dockerfile: Dockerfile
#       container_name: oracle-db
#       environment:
#           ORACLE_PASSWORD: oracle
#           ORACLE_ALLOW_REMOTE: true
#           ORACLE_DISABLE_ASYNCH_IO: true
#           ORACLE_ENABLE_XDB: true
#       ports:
#           - "1521:1521"
#           - "5500:5500"
#           - "8081:8080"
#       volumes:
#           - oracle-data:/opt/oracle/oradata
#       networks:
#           app-network:
    database:
        image: postgres:latest
        container_name: postgres-db
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: portalCiudadano
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            # add entrypoint script to init db
            - ./Dockerfiles/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            app-network:
            
    pgadmin:
        container_name: pgadmin4_container
        image: dpage/pgadmin4:latest
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: root
        ports:
            - "5050:80"

networks:
    app-network:


volumes:
    app-data:
    postgres-data:
    # oracle-data
