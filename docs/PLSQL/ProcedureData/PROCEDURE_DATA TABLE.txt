 CREATE TABLE "CIUDADANOS"."PROCEDURE_DATA" 
(
    "ID" NUMBER(19,0) NOT NULL ENABLE, 
    "USER_ID" NUMBER(19,0) NOT NULL ENABLE, 
    "PROCEDURE_UNITS_ID" NUMBER(19,0) NOT NULL ENABLE, 
    "ACTOR_ID" NUMBER(19,0), 
    "REASON" VARCHAR2(4000 BYTE), 
    "FORMS" CLOB, 
    "ATTACHMENTS" VARCHAR2(4000),
    "MULTIMEDIA_ID" VARCHAR2(1024 BYTE), 
    "STATUS" VARCHAR2(255 BYTE) DEFAULT 'PENDIENTE' NOT NULL ENABLE, 
    "DATE_APPROVED" TIMESTAMP (6), 
    "CREATED_AT" TIMESTAMP (6), 
    "UPDATED_AT" TIMESTAMP (6), 
    CHECK (status in ('INICIADO','PENDIENTE', 'RECHAZADO', 'APROBADO')) ENABLE, 
    CONSTRAINT "PD_ID_PK" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
    STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
    BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
    TABLESPACE "APPSDATA"  ENABLE, 
    CONSTRAINT "PD_USER_ID_FK" FOREIGN KEY ("USER_ID")
    REFERENCES "CIUDADANOS"."USERS" ("ID") ON DELETE CASCADE ENABLE, 
    CONSTRAINT "PD_ACTOR_ID_FK" FOREIGN KEY ("ACTOR_ID")
    REFERENCES "CIUDADANOS"."USER_ACTORS" ("ID") ON DELETE CASCADE ENABLE, 
    CONSTRAINT "PD_PROC_UNITS_FK" FOREIGN KEY ("PROCEDURE_UNITS_ID")
    REFERENCES "CIUDADANOS"."PROCEDURE_UNITS" ("ID") ON DELETE CASCADE ENABLE,
    CONSTRAINT "PD_PROC_USER_UNIQUE" UNIQUE ("PROCEDURE_UNITS_ID", "USER_ID")
) SEGMENT CREATION IMMEDIATE 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
NOCOMPRESS LOGGING
STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "APPSDATA" ;

  CREATE OR REPLACE TRIGGER "CIUDADANOS"."PROCEDURE_DATA_ID_TRG" 
            before insert on PROCEDURE_DATA
            for each row
                begin
            if :new.ID is null then
                select procedure_data_id_seq.nextval into :new.ID from dual;
            end if;
            end;


/
ALTER TRIGGER "CIUDADANOS"."PROCEDURE_DATA_ID_TRG" ENABLE;

  CREATE OR REPLACE TRIGGER "CIUDADANOS"."PROCEDURE_DATA_CREATED_AT_TRG" 
BEFORE INSERT ON PROCEDURE_DATA
FOR EACH ROW
BEGIN
    IF :new.CREATED_AT IS NULL THEN
        :new.CREATED_AT := SYSTIMESTAMP;
    END IF;
END;

/
ALTER TRIGGER "CIUDADANOS"."PROCEDURE_DATA_CREATED_AT_TRG" ENABLE;

  CREATE OR REPLACE TRIGGER "CIUDADANOS"."PROCEDURE_DATA_UPDATED_AT_TRG" 
BEFORE UPDATE ON PROCEDURE_DATA
FOR EACH ROW
BEGIN
    :new.UPDATED_AT := SYSTIMESTAMP;
END;

/
ALTER TRIGGER "CIUDADANOS"."PROCEDURE_DATA_UPDATED_AT_TRG" ENABLE;
